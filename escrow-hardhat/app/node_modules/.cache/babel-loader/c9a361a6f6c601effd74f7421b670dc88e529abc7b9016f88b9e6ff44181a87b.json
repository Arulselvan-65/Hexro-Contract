{"ast":null,"code":"import { BaseError } from './base.js';\nexport class EnsAvatarInvalidMetadataError extends BaseError {\n  constructor(_ref) {\n    let {\n      data\n    } = _ref;\n    super('Unable to extract image from metadata. The metadata may be malformed or invalid.', {\n      metaMessages: ['- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.', '', `Provided data: ${JSON.stringify(data)}`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'EnsAvatarInvalidMetadataError'\n    });\n  }\n}\nexport class EnsAvatarInvalidNftUriError extends BaseError {\n  constructor(_ref2) {\n    let {\n      reason\n    } = _ref2;\n    super(`ENS NFT avatar URI is invalid. ${reason}`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'EnsAvatarInvalidNftUriError'\n    });\n  }\n}\nexport class EnsAvatarUriResolutionError extends BaseError {\n  constructor(_ref3) {\n    let {\n      uri\n    } = _ref3;\n    super(`Unable to resolve ENS avatar URI \"${uri}\". The URI may be malformed, invalid, or does not respond with a valid image.`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'EnsAvatarUriResolutionError'\n    });\n  }\n}\nexport class EnsAvatarUnsupportedNamespaceError extends BaseError {\n  constructor(_ref4) {\n    let {\n      namespace\n    } = _ref4;\n    super(`ENS NFT avatar namespace \"${namespace}\" is not supported. Must be \"erc721\" or \"erc1155\".`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'EnsAvatarUnsupportedNamespaceError'\n    });\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AAMrC,OAAM,MAAOC,6BAA8B,SAAQD,SAAS;EAE1DE,kBAAmC;IAAA,IAAvB;MAAEC;IAAI,CAAiB;IACjC,KAAK,CACH,kFAAkF,EAClF;MACEC,YAAY,EAAE,CACZ,kGAAkG,EAClG,EAAE,EACF,kBAAkBC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,EAAE;KAE3C,CACF;IAXMI;;;;aAAO;;EAYhB;;AAMF,OAAM,MAAOC,2BAA4B,SAAQR,SAAS;EAExDE,mBAA0C;IAAA,IAA9B;MAAEO;IAAM,CAAsB;IACxC,KAAK,CAAC,kCAAkCA,MAAM,EAAE,CAAC;IAF1CF;;;;aAAO;;EAGhB;;AAMF,OAAM,MAAOG,2BAA4B,SAAQV,SAAS;EAExDE,mBAAoC;IAAA,IAAxB;MAAES;IAAG,CAAmB;IAClC,KAAK,CACH,qCAAqCA,GAAG,+EAA+E,CACxH;IAJMJ;;;;aAAO;;EAKhB;;AAOF,OAAM,MAAOK,kCAAmC,SAAQZ,SAAS;EAE/DE,mBAAgD;IAAA,IAApC;MAAEW;IAAS,CAAyB;IAC9C,KAAK,CACH,6BAA6BA,SAAS,oDAAoD,CAC3F;IAJMN;;;;aAAO;;EAKhB","names":["BaseError","EnsAvatarInvalidMetadataError","constructor","data","metaMessages","JSON","stringify","Object","EnsAvatarInvalidNftUriError","reason","EnsAvatarUriResolutionError","uri","EnsAvatarUnsupportedNamespaceError","namespace"],"sources":["D:\\Escrow App\\escrow-hardhat\\node_modules\\viem\\errors\\ens.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type EnsAvatarInvalidMetadataErrorType =\n  EnsAvatarInvalidMetadataError & {\n    name: 'EnsAvatarInvalidMetadataError'\n  }\nexport class EnsAvatarInvalidMetadataError extends BaseError {\n  override name = 'EnsAvatarInvalidMetadataError'\n  constructor({ data }: { data: any }) {\n    super(\n      'Unable to extract image from metadata. The metadata may be malformed or invalid.',\n      {\n        metaMessages: [\n          '- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.',\n          '',\n          `Provided data: ${JSON.stringify(data)}`,\n        ],\n      },\n    )\n  }\n}\n\nexport type EnsAvatarInvalidNftUriErrorType = EnsAvatarInvalidNftUriError & {\n  name: 'EnsAvatarInvalidNftUriError'\n}\nexport class EnsAvatarInvalidNftUriError extends BaseError {\n  override name = 'EnsAvatarInvalidNftUriError'\n  constructor({ reason }: { reason: string }) {\n    super(`ENS NFT avatar URI is invalid. ${reason}`)\n  }\n}\n\nexport type EnsAvatarUriResolutionErrorType = EnsAvatarUriResolutionError & {\n  name: 'EnsAvatarUriResolutionError'\n}\nexport class EnsAvatarUriResolutionError extends BaseError {\n  override name = 'EnsAvatarUriResolutionError'\n  constructor({ uri }: { uri: string }) {\n    super(\n      `Unable to resolve ENS avatar URI \"${uri}\". The URI may be malformed, invalid, or does not respond with a valid image.`,\n    )\n  }\n}\n\nexport type EnsAvatarUnsupportedNamespaceErrorType =\n  EnsAvatarUnsupportedNamespaceError & {\n    name: 'EnsAvatarUnsupportedNamespaceError'\n  }\nexport class EnsAvatarUnsupportedNamespaceError extends BaseError {\n  override name = 'EnsAvatarUnsupportedNamespaceError'\n  constructor({ namespace }: { namespace: string }) {\n    super(\n      `ENS NFT avatar namespace \"${namespace}\" is not supported. Must be \"erc721\" or \"erc1155\".`,\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}