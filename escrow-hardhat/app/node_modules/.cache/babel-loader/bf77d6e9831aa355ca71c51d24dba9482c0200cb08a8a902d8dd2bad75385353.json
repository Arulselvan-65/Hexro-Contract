{"ast":null,"code":"import { etherUnits } from '../../constants/unit.js';\nimport { parseUnits } from './parseUnits.js';\nexport function parseEther(ether) {\n  let unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'wei';\n  return parseUnits(ether, etherUnits[unit]);\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,yBAAyB;AAGpD,SAAmCC,UAAU,QAAQ,iBAAiB;AAItE,OAAM,SAAUC,UAAU,CAACC,KAAa,EAA8B;EAAA,IAA5BC,2EAAuB,KAAK;EACpE,OAAOH,UAAU,CAACE,KAAK,EAAEH,UAAU,CAACI,IAAI,CAAC,CAAC;AAC5C","names":["etherUnits","parseUnits","parseEther","ether","unit"],"sources":["D:\\Escrow App\\escrow-hardhat\\node_modules\\viem\\utils\\unit\\parseEther.ts"],"sourcesContent":["import { etherUnits } from '../../constants/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nimport { type ParseUnitsErrorType, parseUnits } from './parseUnits.js'\n\nexport type ParseEtherErrorType = ParseUnitsErrorType | ErrorType\n\nexport function parseEther(ether: string, unit: 'wei' | 'gwei' = 'wei') {\n  return parseUnits(ether, etherUnits[unit])\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}