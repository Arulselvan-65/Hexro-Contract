{"ast":null,"code":"// import Escrow from './Escrow';\n// import Deployed from './deployedContracts';\n// import {useParams,useState} from 'react';\n// import deploy from './deploy';\n\n// function ContractApproval(){\n\n//     const [escrows, setEscrows] = useState([]);\n//     const storedValues = JSON.parse(localStorage.getItem('storedValues')) || [];\n//     const {signer} = useParams();\n\n//     if(signer){\n//       newContract();\n//     }\n\n//     async function newContract(props) {\n//         const {arbiter, beneficiary, value} = props;\n\n//         const escrowContract = await deploy(signer, arbiter, beneficiary, value);\n\n//         const n = {\n//           address: escrowContract.address,\n//           arbiter,\n//           beneficiary,\n//           value: value.toString()\n//         }\n//         storedValues.push(n);\n//         localStorage.setItem('storedValues', JSON.stringify(storedValues));\n\n//         const escrow = {\n//           address: escrowContract.address,\n//           arbiter,\n//           beneficiary,\n//           value: value.toString(),\n//           handleApprove: async () => {\n//             escrowContract.on('Approved', () => {\n//               document.getElementById(escrowContract.address).className =\n//                 'complete';\n//               document.getElementById(escrowContract.address).innerText =\n//                 \"✓ It's been approved!\";\n//             });\n\n//             await approve(escrowContract, signer);\n//           },\n//         };\n//         setEscrows([...escrows, escrow]);\n//       }\n\n//       async function approve(escrowContract, signer) {\n//         try{\n//         const approveTxn = await escrowContract.connect(signer).approve();\n//         await approveTxn.wait();\n//         }\n//         catch(e){\n//             alert(\"Invalid Arbiter!!\");\n//         }\n//       }\n\n//     return (\n//         <div>\n//              <div className=\"existing-contracts\">\n//         <h1> Existing Contracts </h1>\n\n//         <div id=\"container\">\n//           {escrows.map((escrow) => {\n//             return <Escrow key={escrow.address} {...escrow} />;\n//           })}\n//         </div>\n//       </div>\n\n//       <div id=\"container\">\n//           {storedValues.map((escrow) => {\n//             return <Deployed key={escrow.address} {...escrow} />;\n//           })}  \n//       </div>\n//     </div>\n//     )\n// }\n\n// export default ContractApproval;","map":{"version":3,"names":[],"sources":["D:/Escrow App/escrow-hardhat/app/src/ContractApproval.js"],"sourcesContent":["// import Escrow from './Escrow';\r\n// import Deployed from './deployedContracts';\r\n// import {useParams,useState} from 'react';\r\n// import deploy from './deploy';\r\n\r\n\r\n\r\n// function ContractApproval(){\r\n\r\n//     const [escrows, setEscrows] = useState([]);\r\n//     const storedValues = JSON.parse(localStorage.getItem('storedValues')) || [];\r\n//     const {signer} = useParams();\r\n\r\n//     if(signer){\r\n//       newContract();\r\n//     }\r\n\r\n//     async function newContract(props) {\r\n//         const {arbiter, beneficiary, value} = props;\r\n\r\n//         const escrowContract = await deploy(signer, arbiter, beneficiary, value);\r\n    \r\n//         const n = {\r\n//           address: escrowContract.address,\r\n//           arbiter,\r\n//           beneficiary,\r\n//           value: value.toString()\r\n//         }\r\n//         storedValues.push(n);\r\n//         localStorage.setItem('storedValues', JSON.stringify(storedValues));\r\n    \r\n//         const escrow = {\r\n//           address: escrowContract.address,\r\n//           arbiter,\r\n//           beneficiary,\r\n//           value: value.toString(),\r\n//           handleApprove: async () => {\r\n//             escrowContract.on('Approved', () => {\r\n//               document.getElementById(escrowContract.address).className =\r\n//                 'complete';\r\n//               document.getElementById(escrowContract.address).innerText =\r\n//                 \"✓ It's been approved!\";\r\n//             });\r\n    \r\n//             await approve(escrowContract, signer);\r\n//           },\r\n//         };\r\n//         setEscrows([...escrows, escrow]);\r\n//       }\r\n\r\n//       async function approve(escrowContract, signer) {\r\n//         try{\r\n//         const approveTxn = await escrowContract.connect(signer).approve();\r\n//         await approveTxn.wait();\r\n//         }\r\n//         catch(e){\r\n//             alert(\"Invalid Arbiter!!\");\r\n//         }\r\n//       }\r\n\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//              <div className=\"existing-contracts\">\r\n//         <h1> Existing Contracts </h1>\r\n\r\n//         <div id=\"container\">\r\n//           {escrows.map((escrow) => {\r\n//             return <Escrow key={escrow.address} {...escrow} />;\r\n//           })}\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div id=\"container\">\r\n//           {storedValues.map((escrow) => {\r\n//             return <Deployed key={escrow.address} {...escrow} />;\r\n//           })}  \r\n//       </div>\r\n//     </div>\r\n//     )\r\n// }\r\n\r\n// export default ContractApproval;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}