{"ast":null,"code":"import { BaseError } from '../../errors.js';\nexport class CircularReferenceError extends BaseError {\n  constructor(_ref) {\n    let {\n      type\n    } = _ref;\n    super('Circular reference detected.', {\n      metaMessages: [`Struct \"${type}\" is a circular reference.`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'CircularReferenceError'\n    });\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAE3C,OAAM,MAAOC,sBAAuB,SAAQD,SAAS;EAGnDE,kBAAsC;IAAA,IAA1B;MAAEC;IAAI,CAAoB;IACpC,KAAK,CAAC,8BAA8B,EAAE;MACpCC,YAAY,EAAE,CAAC,WAAWD,IAAI,4BAA4B;KAC3D,CAAC;IALKE;;;;aAAO;;EAMhB","names":["BaseError","CircularReferenceError","constructor","type","metaMessages","Object"],"sources":["D:\\Escrow App\\escrow-hardhat\\node_modules\\abitype\\src\\human-readable\\errors\\struct.ts"],"sourcesContent":["import { BaseError } from '../../errors.js'\n\nexport class CircularReferenceError extends BaseError {\n  override name = 'CircularReferenceError'\n\n  constructor({ type }: { type: string }) {\n    super('Circular reference detected.', {\n      metaMessages: [`Struct \"${type}\" is a circular reference.`],\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}