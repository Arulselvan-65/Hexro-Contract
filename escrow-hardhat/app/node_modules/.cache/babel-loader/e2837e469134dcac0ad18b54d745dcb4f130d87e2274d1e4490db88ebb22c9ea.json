{"ast":null,"code":"import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n  constructor(_ref) {\n    let {\n      address\n    } = _ref;\n    super(`Address \"${address}\" is invalid.`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidAddressError'\n    });\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AAKrC,OAAM,MAAOC,mBAAoB,SAAQD,SAAS;EAEhDE,kBAA4C;IAAA,IAAhC;MAAEC;IAAO,CAAuB;IAC1C,KAAK,CAAC,YAAYA,OAAO,eAAe,CAAC;IAFlCC;;;;aAAO;;EAGhB","names":["BaseError","InvalidAddressError","constructor","address","Object"],"sources":["D:\\Escrow App\\escrow-hardhat\\node_modules\\viem\\errors\\address.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type InvalidAddressErrorType = InvalidAddressError & {\n  name: 'InvalidAddressError'\n}\nexport class InvalidAddressError extends BaseError {\n  override name = 'InvalidAddressError'\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}