{"ast":null,"code":"// import { useEffect, useState} from 'react';\n// import { ethers } from 'ethers';\n// import { Link } from 'react-router-dom';\n\n// const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n// function Home() {\n\n//     const [account, setAccount] = useState();\n//     const [signer, setSigner] = useState();\n\n//     useEffect(() => {\n//       async function getAccounts() {\n//         const accounts = await provider.send('eth_requestAccounts', []);\n\n//         setAccount(accounts[0]);\n//         setSigner(provider.getSigner());\n//       }\n\n//       getAccounts();\n//     }, [account]);\n\n//     const beneficiary = document.getElementById('beneficiary').value;\n//     const arbiter = document.getElementById('arbiter').value;\n//     var value = ethers.BigNumber.from(document.getElementById('wei').value);\n//     value = ethers.utils.parseEther(`${value}`);\n\n//     return (\n// <div className=\"contract\">\n//         <h1> New Contract </h1>\n//         <label>\n//           Arbiter Address\n//           <input type=\"text\" id=\"arbiter\" />\n//         </label>\n\n//         <label>\n//           Beneficiary Address\n//           <input type=\"text\" id=\"beneficiary\" />\n//         </label>\n\n//         <label>\n//           Deposit Amount (in ETH)\n//           <input type=\"text\" id=\"wei\" />\n//         </label>\n\n//         <div\n//           className=\"button\"\n//           id=\"deploy\"\n//           onClick={(e) => {\n//             e.preventDefault();\n//           }}\n//         >\n//           <Link to={`/approve/${signer}`}>Deploy</Link>\n//           <newContract\n//           props = {{arbiter,beneficiary,value}}></newContract>\n//         </div>\n//       </div>\n//     )\n//         }\n// export default Home;","map":{"version":3,"names":[],"sources":["D:/Escrow App/escrow-hardhat/app/src/Landingpage.js"],"sourcesContent":["// import { useEffect, useState} from 'react';\r\n// import { ethers } from 'ethers';\r\n// import { Link } from 'react-router-dom';\r\n\r\n  \r\n// const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n\r\n// function Home() {\r\n\r\n//     const [account, setAccount] = useState();\r\n//     const [signer, setSigner] = useState();\r\n  \r\n    \r\n//     useEffect(() => {\r\n//       async function getAccounts() {\r\n//         const accounts = await provider.send('eth_requestAccounts', []);\r\n  \r\n//         setAccount(accounts[0]);\r\n//         setSigner(provider.getSigner());\r\n//       }\r\n  \r\n//       getAccounts();\r\n//     }, [account]);\r\n\r\n//     const beneficiary = document.getElementById('beneficiary').value;\r\n//     const arbiter = document.getElementById('arbiter').value;\r\n//     var value = ethers.BigNumber.from(document.getElementById('wei').value);\r\n//     value = ethers.utils.parseEther(`${value}`);\r\n  \r\n//     return (\r\n// <div className=\"contract\">\r\n//         <h1> New Contract </h1>\r\n//         <label>\r\n//           Arbiter Address\r\n//           <input type=\"text\" id=\"arbiter\" />\r\n//         </label>\r\n\r\n//         <label>\r\n//           Beneficiary Address\r\n//           <input type=\"text\" id=\"beneficiary\" />\r\n//         </label>\r\n\r\n//         <label>\r\n//           Deposit Amount (in ETH)\r\n//           <input type=\"text\" id=\"wei\" />\r\n//         </label>\r\n\r\n//         <div\r\n//           className=\"button\"\r\n//           id=\"deploy\"\r\n//           onClick={(e) => {\r\n//             e.preventDefault();\r\n//           }}\r\n//         >\r\n//           <Link to={`/approve/${signer}`}>Deploy</Link>\r\n//           <newContract\r\n//           props = {{arbiter,beneficiary,value}}></newContract>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//         }\r\n// export default Home;"],"mappings":"AAAA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}