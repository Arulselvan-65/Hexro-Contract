{"ast":null,"code":"var _jsxFileName = \"D:\\\\Escrow App\\\\escrow-hardhat\\\\app\\\\src\\\\ContractApproval.js\",\n  _s = $RefreshSig$();\nimport Escrow from './Escrow';\nimport Deployed from './deployedContracts';\nimport { useState } from 'react';\nimport deploy from './deploy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function NewContract(props) {\n  const {\n    arbiter,\n    beneficiary,\n    value,\n    signer\n  } = props;\n  console.log(arbiter, beneficiary, value, signer);\n  const escrowContract = await deploy(signer, arbiter, beneficiary, value);\n  const n = {\n    address: escrowContract.address,\n    arbiter,\n    beneficiary,\n    value: value.toString()\n  };\n  storedValues.push(n);\n  localStorage.setItem('storedValues', JSON.stringify(storedValues));\n  const escrow = {\n    address: escrowContract.address,\n    arbiter,\n    beneficiary,\n    value: value.toString(),\n    handleApprove: async () => {\n      escrowContract.on('Approved', () => {\n        document.getElementById(escrowContract.address).className = 'complete';\n        document.getElementById(escrowContract.address).innerText = \"✓ It's been approved!\";\n      });\n      await approve(escrowContract, signer);\n    }\n  };\n  setEscrows([...escrows, escrow]);\n}\n_c = NewContract;\nasync function approve(escrowContract, signer) {\n  try {\n    const approveTxn = await escrowContract.connect(signer).approve();\n    await approveTxn.wait();\n  } catch (e) {\n    alert(\"Invalid Arbiter!!\");\n  }\n}\nfunction ContractApproval(props) {\n  _s();\n  const [escrows, setEscrows] = useState([]);\n  const storedValues = JSON.parse(localStorage.getItem('storedValues')) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"existing-contracts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Existing Contracts \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container\",\n        children: escrows.map(escrow => {\n          return /*#__PURE__*/_jsxDEV(Escrow, {\n            ...escrow\n          }, escrow.address, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: storedValues.map(escrow => {\n        return /*#__PURE__*/_jsxDEV(Deployed, {\n          ...escrow\n        }, escrow.address, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(ContractApproval, \"P9HdfbXGlP+tk7FwG7XXkyImtFM=\");\n_c2 = ContractApproval;\nexport default ContractApproval;\nvar _c, _c2;\n$RefreshReg$(_c, \"NewContract\");\n$RefreshReg$(_c2, \"ContractApproval\");","map":{"version":3,"names":["Escrow","Deployed","useState","deploy","NewContract","props","arbiter","beneficiary","value","signer","console","log","escrowContract","n","address","toString","storedValues","push","localStorage","setItem","JSON","stringify","escrow","handleApprove","on","document","getElementById","className","innerText","approve","setEscrows","escrows","approveTxn","connect","wait","e","alert","ContractApproval","parse","getItem","map"],"sources":["D:/Escrow App/escrow-hardhat/app/src/ContractApproval.js"],"sourcesContent":["import Escrow from './Escrow';\r\nimport Deployed from './deployedContracts';\r\nimport {useState} from 'react';\r\nimport deploy from './deploy';\r\n\r\nasync function NewContract(props){\r\n  const {arbiter, beneficiary, value,signer} = props;\r\n\r\n  console.log(arbiter,beneficiary,value,signer);\r\n\r\n  const escrowContract = await deploy(signer, arbiter, beneficiary, value);\r\n\r\n  const n = {\r\n    address: escrowContract.address,\r\n    arbiter,\r\n    beneficiary,\r\n    value: value.toString()\r\n  }\r\n  storedValues.push(n);\r\n  localStorage.setItem('storedValues', JSON.stringify(storedValues));\r\n\r\n  const escrow = {\r\n    address: escrowContract.address,\r\n    arbiter,\r\n    beneficiary,\r\n    value: value.toString(),\r\n    handleApprove: async () => {\r\n      escrowContract.on('Approved', () => {\r\n        document.getElementById(escrowContract.address).className =\r\n          'complete';\r\n        document.getElementById(escrowContract.address).innerText =\r\n          \"✓ It's been approved!\";\r\n      });\r\n\r\n      await approve(escrowContract, signer);\r\n    },\r\n  };\r\n  setEscrows([...escrows, escrow]);\r\n}\r\n\r\nasync function approve(escrowContract, signer) {\r\n  try{\r\n  const approveTxn = await escrowContract.connect(signer).approve();\r\n  await approveTxn.wait();\r\n  }\r\n  catch(e){\r\n      alert(\"Invalid Arbiter!!\");\r\n  }\r\n}\r\n\r\n\r\nfunction ContractApproval(props){\r\n\r\n    const [escrows, setEscrows] = useState([]);\r\n    const storedValues = JSON.parse(localStorage.getItem('storedValues')) || [];\r\n\r\n    return (\r\n        <div>\r\n             <div className=\"existing-contracts\">\r\n        <h1> Existing Contracts </h1>\r\n\r\n        <div id=\"container\">\r\n          {escrows.map((escrow) => {\r\n            return <Escrow key={escrow.address} {...escrow} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"container\">\r\n          {storedValues.map((escrow) => {\r\n            return <Deployed key={escrow.address} {...escrow} />;\r\n          })}  \r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ContractApproval;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}